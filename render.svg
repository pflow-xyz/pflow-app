<svg xmlns="http://www.w3.org/2000/svg" width="500" height="300" viewBox="0 0 500 300" onload="init(evt)">
    <metadata id="metadata">
        {
        "places": {
        "p1": { "tokens": 1, "x": 100, "y": 150 },
        "p2": { "tokens": 0, "x": 300, "y": 150 }
        },
        "transitions": {
        "t1": { "inputs": ["p1"], "outputs": ["p2"] }
        }
        }
    </metadata>

    <style>
        .place, .transition { cursor: pointer; }
        .token { fill: red; }
    </style>

    <script type="text/ecmascript">
        <![CDATA[
    let petriNet = {};
    function init(evt) {
        let metadataElement = document.getElementById("metadata");
        if (metadataElement) {
            let metadata = metadataElement.textContent.trim();
            try {
                petriNet = JSON.parse(metadata);
                updateTokens();
            } catch (error) {
                console.error("Failed to parse metadata: ", error);
            }
        } else {
            console.error("Metadata element not found");
        }
    }

    function fireTransition(id) {
        if (!petriNet.transitions || !petriNet.transitions[id]) {
            console.error(`Transition '${id}' not found in petriNet.transitions`);
            return;
        }
        
        let transition = petriNet.transitions[id];
        let inputPlace = transition.inputs[0];
        let outputPlace = transition.outputs[0];
        
        if (petriNet.places[inputPlace].tokens > 0) {
            petriNet.places[inputPlace].tokens--;
            petriNet.places[outputPlace].tokens++;
            console.log(`Fired transition: ${id}`);
            updateTokens();
        } else {
            console.warn(`No tokens available in '${inputPlace}' to fire transition '${id}'`);
        }
    }

    function updateTokens() {
        document.querySelectorAll(".token").forEach(e => e.remove());
        Object.entries(petriNet.places).forEach(([id, place]) => {
            for (let i = 0; i < place.tokens; i++) {
                let token = document.createElementNS("http://www.w3.org/2000/svg", "circle");
                token.setAttribute("cx", place.x);
                token.setAttribute("cy", place.y);
                token.setAttribute("r", "8");
                token.setAttribute("class", "token");
                document.querySelector("svg").appendChild(token);
            }
        });
    }
    ]]>
    </script>

    <!-- Places -->
    <circle id="p1" class="place" cx="100" cy="150" r="20" stroke="black" fill="white" />
    <text x="85" y="180" font-size="12">P1</text>

    <circle id="p2" class="place" cx="300" cy="150" r="20" stroke="black" fill="white" />
    <text x="285" y="180" font-size="12">P2</text>

    <!-- Transition -->
    <rect id="t1" class="transition" x="190" y="135" width="20" height="30" stroke="black" fill="white" onclick="fireTransition('t1')" />
    <text x="180" y="130" font-size="12">T1</text>

    <!-- Arcs -->
    <line x1="120" y1="150" x2="190" y2="150" stroke="black" stroke-width="2" marker-end="url(#arrow)" />
    <line x1="210" y1="150" x2="280" y2="150" stroke="black" stroke-width="2" marker-end="url(#arrow)" />

    <defs>
        <marker id="arrow" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
            <polygon points="0 0, 10 3.5, 0 7" fill="black" />
        </marker>
    </defs>
</svg>
